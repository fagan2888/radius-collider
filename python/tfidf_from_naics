import json # For loading the data

# For debugging purposes
try:
	import IPython as ipy
except ImportError:
	print "Couldn't import IPython"

import nltk # Natural Language Processing Library, run nltk.download() to get english dictionary and such
from nltk.corpus import wordnet
import numpy as np # Numerical Python Library
from urllib import urlopen
from bs4 import BeautifulSoup
import nltk, string
from sklearn.feature_extraction.text import TfidfVectorizer


stemmer = nltk.stem.porter.PorterStemmer()
remove_punctuation_map = dict((ord(char), None) for char in string.punctuation)

def stem_tokens(tokens):
    return [stemmer.stem(item) for item in tokens]

'''remove punctuation, lowercase, stem'''
def normalize(text):
    return stem_tokens(nltk.word_tokenize(text.lower().translate(remove_punctuation_map)))

vectorizer = TfidfVectorizer(tokenizer=normalize, stop_words='english')

def cosine_sim(text1, text2):
    tfidf = vectorizer.fit_transform([text1, text2])
    return ((tfidf * tfidf.T).A)[0,1]

def compare_single_biz(biz_summ, naics_lst):
	best_code = naics_lst[0]['code']
	best_val = 0
	best_index = 0
	for i, naics in enumerate(naics_lst):
		val  = cosine_sim(biz_summ,naics['description'])
		if val > best_val:
			best_code = naics['code']
			best_val = val
			best_index = i
	return best_index,best_val


print cosine_sim('a little bird', 'a little bird')
print cosine_sim('a little bird', 'a little bird chirps')
print cosine_sim('a little bird', 'a fowl')

with open('../challenge_set.json') as data_file:
	businesses = json.load(data_file)

with open('../data.json') as data_file:
	naics = json.load(data_file)

example_biz = businesses[0]['description']

ipy.embed()